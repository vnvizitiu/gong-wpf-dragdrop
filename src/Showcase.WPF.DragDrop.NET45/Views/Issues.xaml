<UserControl x:Class="Showcase.WPF.DragDrop.Views.Issues"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:Showcase.WPF.DragDrop.Views"
             xmlns:viewModels="clr-namespace:Showcase.WPF.DragDrop.ViewModels"
             xmlns:dd="urn:gong-wpf-dragdrop"
             xmlns:models="clr-namespace:Showcase.WPF.DragDrop.Models"
             xmlns:customControls="clr-namespace:Showcase.WPF.DragDrop.CustomControls"
             xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
             mc:Ignorable="d"
             d:DataContext="{d:DesignInstance viewModels:MainViewModel}"
             d:DesignHeight="400" d:DesignWidth="600">
  <Grid>
    <Grid.Resources>
      <Style TargetType="{x:Type ItemsControl}" BasedOn="{StaticResource DefaultItemsControl}" />
      <Style TargetType="{x:Type ListBox}" BasedOn="{StaticResource DefaultListBoxStyle}" />
      <Style TargetType="{x:Type ListView}" BasedOn="{StaticResource DefaultListViewStyle}" />
      <Style TargetType="{x:Type TreeView}" BasedOn="{StaticResource DefaultTreeViewStyle}" />
    </Grid.Resources>

    <TabControl Style="{StaticResource ShowcaseTabControlStyle}">
      <TabItem Header="#123">
        <TabItem.Resources>
          <DataTemplate x:Key="FlowDocDataTemplate">
            <FlowDocumentScrollViewer IsSelectionEnabled="False"
                                      IsHitTestVisible="False"
                                      HorizontalScrollBarVisibility="Disabled"
                                      VerticalScrollBarVisibility="Disabled">
              <FlowDocument PagePadding="0">
                <Paragraph>
                  <TextBlock Text="FlowDocument for" />
                  <LineBreak />
                  <TextBlock Text="{Binding}" />
                </Paragraph>
              </FlowDocument>
            </FlowDocumentScrollViewer>
          </DataTemplate>
        </TabItem.Resources>
        <DockPanel LastChildFill="True">
          <Grid DockPanel.Dock="Top">
            <TextBlock Text="FlowDocument in ItemTemplate" Style="{StaticResource SampleHeaderTextBlockStyle}" />
            <Button CommandParameter="123" ToolTip="Open #123 on Github" Style="{StaticResource GitHubIssueButtonStyle}" />
          </Grid>
          <ScrollViewer HorizontalScrollBarVisibility="Disabled"
                        VerticalScrollBarVisibility="Auto">
            <StackPanel>
              <TextBlock Style="{StaticResource DefaultTextBlockStyle}"
                         Text="ListBox with ItemTemplate which contains a FlowDocument." />
              <Grid>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="*" />
                  <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <ListBox Grid.Column="0"
                         x:Name="LeftIssue123ListBox"
                         ItemTemplate="{StaticResource FlowDocDataTemplate}"
                         ItemsSource="{Binding Data.Collection1}"
                         dd:DragDrop.IsDragSource="True"
                         dd:DragDrop.IsDropTarget="True"
                         dd:DragDrop.UseDefaultDragAdorner="False" />
                <ListBox Grid.Column="1"
                         ItemTemplate="{StaticResource FlowDocDataTemplate}"
                         ItemsSource="{Binding Data.Collection2}"
                         dd:DragDrop.IsDragSource="True"
                         dd:DragDrop.IsDropTarget="True"
                         dd:DragDrop.UseDefaultDragAdorner="False" />
              </Grid>

              <TextBlock Style="{StaticResource DefaultTextBlockStyle}"
                         Text="Customization (for left ListBox)" />
              <CheckBox Margin="10 5" Content="IsDragSource"
                        IsChecked="{Binding ElementName=LeftIssue123ListBox, Path=(dd:DragDrop.IsDragSource), Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
              <CheckBox Margin="10 5" Content="IsDropTarget"
                        IsChecked="{Binding ElementName=LeftIssue123ListBox, Path=(dd:DragDrop.IsDropTarget), Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
              <CheckBox Margin="10 5" Content="UseDefaultDragAdorner"
                        IsChecked="{Binding ElementName=LeftIssue123ListBox, Path=(dd:DragDrop.UseDefaultDragAdorner), Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
              <CheckBox Margin="10 5" Content="UseDefaultEffectDataTemplate"
                        IsChecked="{Binding ElementName=LeftIssue123ListBox, Path=(dd:DragDrop.UseDefaultEffectDataTemplate), Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
            </StackPanel>
          </ScrollViewer>
        </DockPanel>
      </TabItem>

      <TabItem Header="#42">
        <TabItem.Resources>
          <DataTemplate x:Key="LabelDataTemplate">
            <Label Content="{Binding}" />
          </DataTemplate>
        </TabItem.Resources>
        <DockPanel LastChildFill="True">
          <Grid DockPanel.Dock="Top">
            <TextBlock Text="Crash when using items deriving from ContentControl" Style="{StaticResource SampleHeaderTextBlockStyle}" />
            <Button CommandParameter="42" ToolTip="Open #42 on Github" Style="{StaticResource GitHubIssueButtonStyle}" />
          </Grid>
          <ScrollViewer HorizontalScrollBarVisibility="Disabled"
                        VerticalScrollBarVisibility="Auto">
            <StackPanel>
              <TextBlock Style="{StaticResource DefaultTextBlockStyle}"
                         Text="ListBox with ItemTemplate which contains a Label." />
              <Grid>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="*" />
                  <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <ListBox Grid.Column="0"
                         x:Name="LeftIssue42ListBox"
                         ItemTemplate="{StaticResource LabelDataTemplate}"
                         ItemsSource="{Binding Data.Collection1}"
                         dd:DragDrop.IsDragSource="True"
                         dd:DragDrop.IsDropTarget="True"
                         dd:DragDrop.UseDefaultDragAdorner="True" />
                <ListBox Grid.Column="1"
                         ItemTemplate="{StaticResource LabelDataTemplate}"
                         ItemsSource="{Binding Data.Collection2}"
                         dd:DragDrop.IsDragSource="True"
                         dd:DragDrop.IsDropTarget="True"
                         dd:DragDrop.UseDefaultDragAdorner="False" />
              </Grid>

              <TextBlock Style="{StaticResource DefaultTextBlockStyle}"
                         Text="Customization (for left ListBox)" />
              <CheckBox Margin="10 5" Content="IsDragSource"
                        IsChecked="{Binding ElementName=LeftIssue42ListBox, Path=(dd:DragDrop.IsDragSource), Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
              <CheckBox Margin="10 5" Content="IsDropTarget"
                        IsChecked="{Binding ElementName=LeftIssue42ListBox, Path=(dd:DragDrop.IsDropTarget), Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
              <CheckBox Margin="10 5" Content="UseDefaultDragAdorner"
                        IsChecked="{Binding ElementName=LeftIssue42ListBox, Path=(dd:DragDrop.UseDefaultDragAdorner), Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
              <CheckBox Margin="10 5" Content="UseDefaultEffectDataTemplate"
                        IsChecked="{Binding ElementName=LeftIssue42ListBox, Path=(dd:DragDrop.UseDefaultEffectDataTemplate), Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
            </StackPanel>
          </ScrollViewer>
        </DockPanel>
      </TabItem>

      <TabItem Header="#37">
        <TabItem.Resources>
          <DataTemplate x:Key="Issue37DataTemplate" DataType="{x:Type models:ItemModel}">
            <Grid>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" SharedSizeGroup="Col01" />
                <ColumnDefinition Width="Auto" SharedSizeGroup="Col02" />
                <ColumnDefinition Width="*" />
              </Grid.ColumnDefinitions>
              <TextBlock Grid.Column="0"
                         Margin="2"
                         VerticalAlignment="Center"
                         Text="{Binding Path=Caption, Mode=OneWay}" />
              <TextBox Grid.Column="1"
                       Margin="2"
                       MinWidth="60"
                       VerticalAlignment="Center"
                       Text="{Binding Path=BindableDoubleValue, Mode=OneWay, StringFormat={}{0:n2} %}" />
              <Slider Grid.Column="2"
                      VerticalAlignment="Center"
                      Value="{Binding Path=BindableDoubleValue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                      Minimum="0"
                      Maximum="100"
                      SmallChange="5"
                      LargeChange="10"
                      Margin="2" />
            </Grid>
          </DataTemplate>
        </TabItem.Resources>
        <DockPanel LastChildFill="True">
          <Grid DockPanel.Dock="Top">
            <TextBlock Text="Slider in list item can't be changed" Style="{StaticResource SampleHeaderTextBlockStyle}" />
            <Button CommandParameter="37" ToolTip="Open #37 on Github" Style="{StaticResource GitHubIssueButtonStyle}" />
          </Grid>
          <ScrollViewer HorizontalScrollBarVisibility="Disabled"
                        VerticalScrollBarVisibility="Auto">
            <StackPanel>
              <TextBlock Style="{StaticResource DefaultTextBlockStyle}"
                         Text="ListBox with ItemTemplate which contains other controls. This controls also gets the mouse input, so drag action should not be started." />
              <Grid>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="*" />
                  <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <ListBox Grid.Column="0"
                         Grid.IsSharedSizeScope="True"
                         x:Name="LeftIssue37ListBox"
                         HorizontalContentAlignment="Stretch"
                         ItemTemplate="{StaticResource Issue37DataTemplate}"
                         ItemsSource="{Binding Data.Collection1}"
                         dd:DragDrop.IsDragSource="True"
                         dd:DragDrop.IsDropTarget="True"
                         dd:DragDrop.UseDefaultDragAdorner="True" />
                <ListBox Grid.Column="1"
                         ItemsSource="{Binding Data.Collection2}"
                         dd:DragDrop.IsDragSource="True"
                         dd:DragDrop.IsDropTarget="True"
                         dd:DragDrop.UseDefaultDragAdorner="False" />
              </Grid>

              <TextBlock Style="{StaticResource DefaultTextBlockStyle}"
                         Text="Customization (for left ListBox)" />
              <CheckBox Margin="10 5" Content="IsDragSource"
                        IsChecked="{Binding ElementName=LeftIssue37ListBox, Path=(dd:DragDrop.IsDragSource), Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
              <CheckBox Margin="10 5" Content="IsDropTarget"
                        IsChecked="{Binding ElementName=LeftIssue37ListBox, Path=(dd:DragDrop.IsDropTarget), Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
              <CheckBox Margin="10 5" Content="UseDefaultDragAdorner"
                        IsChecked="{Binding ElementName=LeftIssue37ListBox, Path=(dd:DragDrop.UseDefaultDragAdorner), Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
              <CheckBox Margin="10 5" Content="UseDefaultEffectDataTemplate"
                        IsChecked="{Binding ElementName=LeftIssue37ListBox, Path=(dd:DragDrop.UseDefaultEffectDataTemplate), Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
            </StackPanel>
          </ScrollViewer>
        </DockPanel>
      </TabItem>

      <TabItem Header="#65">
        <TabItem.Resources>
          <Style x:Key="CustomTreeViewItemStyle" TargetType="{x:Type TreeViewItem}">
            <Setter Property="Padding" Value="2" />
            <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
          </Style>
          <HierarchicalDataTemplate x:Key="CustomTreeViewItemTemplate" DataType="{x:Type models:TreeNode}" ItemsSource="{Binding Children}">
            <TextBlock Text="{Binding Caption}" />
          </HierarchicalDataTemplate>
        </TabItem.Resources>
        <DockPanel LastChildFill="True">
          <Grid DockPanel.Dock="Top">
            <TextBlock Text="TreeViewItem with ItemSource" Style="{StaticResource SampleHeaderTextBlockStyle}" />
            <Button CommandParameter="65" ToolTip="Open #65 on Github" Style="{StaticResource GitHubIssueButtonStyle}" />
          </Grid>
          <ScrollViewer HorizontalScrollBarVisibility="Disabled"
                        VerticalScrollBarVisibility="Auto">
            <StackPanel>
              <TextBlock Style="{StaticResource DefaultTextBlockStyle}"
                         Text="TreeView with a TreeViewItem which binds the ItemSource to a Collection." />
              <Grid>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="*" />
                  <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <TreeView Grid.Column="0"
                          Grid.IsSharedSizeScope="True"
                          x:Name="LeftIssue65TreeView"
                          ItemContainerStyle="{StaticResource CustomTreeViewItemStyle}"
                          ItemTemplate="{StaticResource CustomTreeViewItemTemplate}"
                          HorizontalContentAlignment="Stretch"
                          dd:DragDrop.IsDragSource="True"
                          dd:DragDrop.IsDropTarget="True"
                          dd:DragDrop.UseDefaultDragAdorner="True">
                  <TreeViewItem Header="A TreeViewItem with ItemsSource"
                                ItemContainerStyle="{StaticResource CustomTreeViewItemStyle}"
                                ItemTemplate="{StaticResource CustomTreeViewItemTemplate}"
                                ItemsSource="{Binding Data.TreeCollection1}" />
                </TreeView>
                <TreeView Grid.Column="1"
                          ItemContainerStyle="{StaticResource CustomTreeViewItemStyle}"
                          ItemTemplate="{StaticResource CustomTreeViewItemTemplate}"
                          dd:DragDrop.IsDragSource="True"
                          dd:DragDrop.IsDropTarget="True"
                          dd:DragDrop.UseDefaultDragAdorner="False">
                  <TreeViewItem Header="A TreeViewItem with sub item"
                                ItemContainerStyle="{StaticResource CustomTreeViewItemStyle}"
                                ItemTemplate="{StaticResource CustomTreeViewItemTemplate}">
                    <TreeViewItem Header="Another TreeViewItem with ItemsSource"
                                  ItemContainerStyle="{StaticResource CustomTreeViewItemStyle}"
                                  ItemTemplate="{StaticResource CustomTreeViewItemTemplate}"
                                  ItemsSource="{Binding Data.TreeCollection2}" />
                  </TreeViewItem>
                </TreeView>
              </Grid>

              <TextBlock Style="{StaticResource DefaultTextBlockStyle}"
                         Text="Customization (for left TreeView)" />
              <CheckBox Margin="10 5" Content="IsDragSource"
                        IsChecked="{Binding ElementName=LeftIssue65TreeView, Path=(dd:DragDrop.IsDragSource), Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
              <CheckBox Margin="10 5" Content="IsDropTarget"
                        IsChecked="{Binding ElementName=LeftIssue65TreeView, Path=(dd:DragDrop.IsDropTarget), Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
              <CheckBox Margin="10 5" Content="UseDefaultDragAdorner"
                        IsChecked="{Binding ElementName=LeftIssue65TreeView, Path=(dd:DragDrop.UseDefaultDragAdorner), Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
              <CheckBox Margin="10 5" Content="UseDefaultEffectDataTemplate"
                        IsChecked="{Binding ElementName=LeftIssue65TreeView, Path=(dd:DragDrop.UseDefaultEffectDataTemplate), Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
            </StackPanel>
          </ScrollViewer>
        </DockPanel>
      </TabItem>

      <TabItem Header="#30">
        <DockPanel LastChildFill="True">
          <Grid DockPanel.Dock="Top">
            <TextBlock Text="No support for derived item container classes" Style="{StaticResource SampleHeaderTextBlockStyle}" />
            <Button CommandParameter="30" ToolTip="Open #30 on Github" Style="{StaticResource GitHubIssueButtonStyle}" />
          </Grid>
          <ScrollViewer HorizontalScrollBarVisibility="Disabled"
                        VerticalScrollBarVisibility="Auto">
            <StackPanel>
              <TextBlock Style="{StaticResource DefaultTextBlockStyle}"
                         Text="Derived ListBox on left side and a original ListView on the right side." />
              <Grid>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="*" />
                  <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <customControls:CustomListBox Grid.Column="0"
                                              Style="{StaticResource DefaultListBoxStyle}"
                                              x:Name="LeftIssue30ListBox"
                                              ItemsSource="{Binding Data.Collection1}"
                                              dd:DragDrop.IsDragSource="True"
                                              dd:DragDrop.IsDropTarget="True"
                                              dd:DragDrop.UseDefaultDragAdorner="True" />
                <ListView Grid.Column="1"
                          ItemsSource="{Binding Data.Collection2}"
                          dd:DragDrop.IsDragSource="True"
                          dd:DragDrop.IsDropTarget="True"
                          dd:DragDrop.UseDefaultDragAdorner="True">
                  <ListView.View>
                    <GridView>
                      <GridViewColumn>
                        <GridViewColumn.CellTemplate>
                          <DataTemplate>
                            <iconPacks:PackIconMaterial Focusable="False" Kind="Star" Foreground="Gold" />
                          </DataTemplate>
                        </GridViewColumn.CellTemplate>
                      </GridViewColumn>
                      <GridViewColumn>
                        <GridViewColumn.CellTemplate>
                          <DataTemplate>
                            <TextBlock Text="{Binding}" />
                          </DataTemplate>
                        </GridViewColumn.CellTemplate>
                      </GridViewColumn>
                    </GridView>
                  </ListView.View>
                </ListView>
              </Grid>

              <TextBlock Style="{StaticResource DefaultTextBlockStyle}"
                         Text="Customization (for left ListBox)" />
              <CheckBox Margin="10 5" Content="IsDragSource"
                        IsChecked="{Binding ElementName=LeftIssue30ListBox, Path=(dd:DragDrop.IsDragSource), Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
              <CheckBox Margin="10 5" Content="IsDropTarget"
                        IsChecked="{Binding ElementName=LeftIssue30ListBox, Path=(dd:DragDrop.IsDropTarget), Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
              <CheckBox Margin="10 5" Content="UseDefaultDragAdorner"
                        IsChecked="{Binding ElementName=LeftIssue30ListBox, Path=(dd:DragDrop.UseDefaultDragAdorner), Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
              <CheckBox Margin="10 5" Content="UseDefaultEffectDataTemplate"
                        IsChecked="{Binding ElementName=LeftIssue30ListBox, Path=(dd:DragDrop.UseDefaultEffectDataTemplate), Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
            </StackPanel>
          </ScrollViewer>
        </DockPanel>
      </TabItem>

      <TabItem Header="#73">
        <DockPanel LastChildFill="True">
          <Grid DockPanel.Dock="Top">
            <TextBlock Text="Crash on click inside empty ItemsControl" Style="{StaticResource SampleHeaderTextBlockStyle}" />
            <Button CommandParameter="73" ToolTip="Open #73 on Github" Style="{StaticResource GitHubPullRequestButtonStyle}" />
          </Grid>
          <ScrollViewer HorizontalScrollBarVisibility="Disabled"
                        VerticalScrollBarVisibility="Auto">
            <StackPanel>
              <TextBlock Style="{StaticResource DefaultTextBlockStyle}"
                         Text="Empty ItemsControl with custom template on left side and a ListBox on the right side." />
              <Grid>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="*" />
                  <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <ItemsControl Grid.Column="0"
                              x:Name="LeftItemsControlIssue73"
                              ItemsSource="{Binding Data.Collection3}"
                              dd:DragDrop.IsDragSource="True"
                              dd:DragDrop.IsDropTarget="True"
                              dd:DragDrop.UseDefaultDragAdorner="True">
                  <ItemsControl.ItemTemplate>
                    <DataTemplate>
                      <StackPanel Orientation="Horizontal" Margin="2" Background="Transparent">
                        <iconPacks:PackIconMaterial Kind="Cart" VerticalAlignment="Center" />
                        <Label Content="{Binding}" VerticalAlignment="Center" />
                      </StackPanel>
                    </DataTemplate>
                  </ItemsControl.ItemTemplate>
                </ItemsControl>
                <ListBox Grid.Column="1"
                         ItemsSource="{Binding Data.Collection1}"
                         dd:DragDrop.IsDragSource="True"
                         dd:DragDrop.IsDropTarget="True"
                         dd:DragDrop.UseDefaultDragAdorner="True" />
              </Grid>

              <TextBlock Style="{StaticResource DefaultTextBlockStyle}"
                         Text="Customization (for left ItemsControl)" />
              <CheckBox Margin="10 5" Content="IsDragSource"
                        IsChecked="{Binding ElementName=LeftItemsControlIssue73, Path=(dd:DragDrop.IsDragSource), Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
              <CheckBox Margin="10 5" Content="IsDropTarget"
                        IsChecked="{Binding ElementName=LeftItemsControlIssue73, Path=(dd:DragDrop.IsDropTarget), Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
              <CheckBox Margin="10 5" Content="UseDefaultDragAdorner"
                        IsChecked="{Binding ElementName=LeftItemsControlIssue73, Path=(dd:DragDrop.UseDefaultDragAdorner), Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
              <CheckBox Margin="10 5" Content="UseDefaultEffectDataTemplate"
                        IsChecked="{Binding ElementName=LeftItemsControlIssue73, Path=(dd:DragDrop.UseDefaultEffectDataTemplate), Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
            </StackPanel>
          </ScrollViewer>
        </DockPanel>
      </TabItem>

      <TabItem Header="#64">
        <DockPanel LastChildFill="True">
          <Grid DockPanel.Dock="Top">
            <TextBlock Text="ItemsControl itself doesn't work" Style="{StaticResource SampleHeaderTextBlockStyle}" />
            <Button CommandParameter="64" ToolTip="Open #64 on Github" Style="{StaticResource GitHubIssueButtonStyle}" />
          </Grid>
          <ScrollViewer HorizontalScrollBarVisibility="Disabled"
                        VerticalScrollBarVisibility="Auto">
            <StackPanel>
              <TextBlock Style="{StaticResource DefaultTextBlockStyle}"
                         Text="An ItemsControl with a trigger for mouse over." />
              <Grid>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="*" />
                  <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <ItemsControl Grid.Column="0"
                              x:Name="LeftItemsControlIssue64"
                              ItemsSource="{Binding Data.Collection1}"
                              dd:DragDrop.IsDragSource="True"
                              dd:DragDrop.IsDropTarget="True">
                  <ItemsControl.ItemTemplate>
                    <DataTemplate>
                      <Grid Background="Transparent">
                        <StackPanel Orientation="Horizontal" Margin="2">
                          <iconPacks:PackIconMaterial Kind="EmoticonCool" VerticalAlignment="Center" />
                          <Label Content="{Binding}" VerticalAlignment="Center" />
                        </StackPanel>
                        <Grid x:Name="SpecialMouseOver" Background="Silver"
                              HorizontalAlignment="Right"
                              Opacity="0">
                          <iconPacks:PackIconMaterial Kind="ThumbUp" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="10 0 10 0" />
                        </Grid>
                      </Grid>
                      <DataTemplate.Triggers>
                        <EventTrigger RoutedEvent="Control.MouseEnter">
                          <BeginStoryboard>
                            <Storyboard>
                              <DoubleAnimation Duration="0:0:0.3"
                                               To="0.8"
                                               Storyboard.TargetName="SpecialMouseOver"
                                               Storyboard.TargetProperty="Opacity" />
                            </Storyboard>
                          </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="Control.MouseLeave">
                          <BeginStoryboard>
                            <Storyboard>
                              <DoubleAnimation Duration="0:0:0.3"
                                               To="0"
                                               Storyboard.TargetName="SpecialMouseOver"
                                               Storyboard.TargetProperty="Opacity" />
                            </Storyboard>
                          </BeginStoryboard>
                        </EventTrigger>
                      </DataTemplate.Triggers>
                    </DataTemplate>
                  </ItemsControl.ItemTemplate>
                </ItemsControl>
                <ListBox Grid.Column="1"
                         ItemsSource="{Binding Data.Collection2}"
                         dd:DragDrop.IsDragSource="True"
                         dd:DragDrop.IsDropTarget="True"
                         dd:DragDrop.UseDefaultDragAdorner="True" />
              </Grid>

              <TextBlock Style="{StaticResource DefaultTextBlockStyle}"
                         Text="Customization (for left ItemsControl)" />
              <CheckBox Margin="10 5" Content="IsDragSource"
                        IsChecked="{Binding ElementName=LeftItemsControlIssue64, Path=(dd:DragDrop.IsDragSource), Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
              <CheckBox Margin="10 5" Content="IsDropTarget"
                        IsChecked="{Binding ElementName=LeftItemsControlIssue64, Path=(dd:DragDrop.IsDropTarget), Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
              <CheckBox Margin="10 5" Content="UseDefaultDragAdorner"
                        IsChecked="{Binding ElementName=LeftItemsControlIssue64, Path=(dd:DragDrop.UseDefaultDragAdorner), Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
              <CheckBox Margin="10 5" Content="UseDefaultEffectDataTemplate"
                        IsChecked="{Binding ElementName=LeftItemsControlIssue64, Path=(dd:DragDrop.UseDefaultEffectDataTemplate), Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
            </StackPanel>
          </ScrollViewer>
        </DockPanel>
      </TabItem>

      <TabItem Header="#85">
        <DockPanel LastChildFill="True">
          <Grid DockPanel.Dock="Top">
            <TextBlock Text="Drop to Control which is not an ItemsControl" Style="{StaticResource SampleHeaderTextBlockStyle}" />
            <Button CommandParameter="85" ToolTip="Open #85 on Github" Style="{StaticResource GitHubIssueButtonStyle}" />
          </Grid>
          <ScrollViewer HorizontalScrollBarVisibility="Disabled"
                        VerticalScrollBarVisibility="Auto">
            <StackPanel>
              <TextBlock Style="{StaticResource DefaultTextBlockStyle}"
                         Text="You can drag and drop items to any other Control with a custom DropHandler." />
              <Grid>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="*" />
                  <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <ListBox Grid.Column="0"
                         x:Name="LeftIssue85ListBox"
                         ItemsSource="{Binding Data.Collection1}"
                         dd:DragDrop.IsDragSource="True"
                         dd:DragDrop.IsDropTarget="True" />
                <Grid Grid.Column="1"
                      Margin="4">
                  <TextBox Text="Drop any item on this TextBox..."
                           Height="150"
                           TextWrapping="Wrap"
                           VerticalScrollBarVisibility="Auto"
                           dd:DragDrop.IsDropTarget="True"
                           dd:DragDrop.DropHandler="{Binding Data.TextBoxCustomDropHandler}" />
                </Grid>
              </Grid>
            </StackPanel>
          </ScrollViewer>
        </DockPanel>
      </TabItem>

      <TabItem Header="#84">
        <TabItem.Resources>
          <DataTemplate x:Key="Issue84DataTemplate" DataType="{x:Type models:ItemModel}">
            <Grid>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" SharedSizeGroup="Col01" />
                <ColumnDefinition Width="Auto" SharedSizeGroup="Col02" />
                <ColumnDefinition Width="*" />
              </Grid.ColumnDefinitions>
              <TextBlock Grid.Column="0"
                         Margin="2"
                         VerticalAlignment="Center"
                         Text="{Binding Path=Caption, Mode=OneWay}" />
              <TextBox Grid.Column="1"
                       Margin="2"
                       VerticalAlignment="Center"
                       MinWidth="70"
                       Text="{Binding Path=SelectedSubItem, Mode=OneWay}" />
              <ComboBox Grid.Column="2"
                        VerticalAlignment="Center"
                        SelectedValue="{Binding Path=SelectedSubItem, TargetNullValue={x:Null}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                        ItemsSource="{Binding Path=SubItemCollection, Mode=OneWay}"
                        Margin="2" />
            </Grid>
          </DataTemplate>
        </TabItem.Resources>
        <DockPanel LastChildFill="True">
          <Grid DockPanel.Dock="Top">
            <TextBlock Text="ComboBox in list item can't be used" Style="{StaticResource SampleHeaderTextBlockStyle}" />
            <Button CommandParameter="84" ToolTip="Open #84 on Github" Style="{StaticResource GitHubIssueButtonStyle}" />
          </Grid>
          <ScrollViewer HorizontalScrollBarVisibility="Disabled"
                        VerticalScrollBarVisibility="Auto">
            <StackPanel>
              <TextBlock Style="{StaticResource DefaultTextBlockStyle}"
                         Text="ListBox with ItemTemplate which contains other controls. This controls also gets the mouse input, so drag action should not be started." />
              <Grid>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="*" />
                  <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <ListBox Grid.Column="0"
                         Grid.IsSharedSizeScope="True"
                         x:Name="LeftIssue84ListBox"
                         HorizontalContentAlignment="Stretch"
                         ItemTemplate="{StaticResource Issue84DataTemplate}"
                         ItemsSource="{Binding Data.Collection1}"
                         dd:DragDrop.IsDragSource="True"
                         dd:DragDrop.IsDropTarget="True"
                         dd:DragDrop.UseDefaultDragAdorner="True" />
                <ListBox Grid.Column="1"
                         ItemsSource="{Binding Data.Collection2}"
                         dd:DragDrop.IsDragSource="True"
                         dd:DragDrop.IsDropTarget="True"
                         dd:DragDrop.UseDefaultDragAdorner="False" />
              </Grid>

              <TextBlock Style="{StaticResource DefaultTextBlockStyle}"
                         Text="Customization (for left ListBox)" />
              <CheckBox Margin="10 5" Content="IsDragSource"
                        IsChecked="{Binding ElementName=LeftIssue84ListBox, Path=(dd:DragDrop.IsDragSource), Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
              <CheckBox Margin="10 5" Content="IsDropTarget"
                        IsChecked="{Binding ElementName=LeftIssue84ListBox, Path=(dd:DragDrop.IsDropTarget), Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
              <CheckBox Margin="10 5" Content="UseDefaultDragAdorner"
                        IsChecked="{Binding ElementName=LeftIssue84ListBox, Path=(dd:DragDrop.UseDefaultDragAdorner), Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
              <CheckBox Margin="10 5" Content="UseDefaultEffectDataTemplate"
                        IsChecked="{Binding ElementName=LeftIssue84ListBox, Path=(dd:DragDrop.UseDefaultEffectDataTemplate), Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
            </StackPanel>
          </ScrollViewer>
        </DockPanel>
      </TabItem>

      <TabItem Header="#88">
        <TabItem.Resources>
          <Style x:Key="CustomTreeViewItemStyle" TargetType="{x:Type TreeViewItem}">
            <Setter Property="ItemsPanel">
              <Setter.Value>
                <ItemsPanelTemplate>
                  <WrapPanel Orientation="Horizontal" Width="{Binding ActualWidth, RelativeSource={RelativeSource AncestorType=ItemsPresenter}}" />
                </ItemsPanelTemplate>
              </Setter.Value>
            </Setter>
            <Setter Property="Padding" Value="2" />
            <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
          </Style>
          <HierarchicalDataTemplate x:Key="CustomTreeViewItemTemplate" DataType="{x:Type models:TreeNode}" ItemsSource="{Binding Children}">
            <TextBlock Text="{Binding Caption}" />
          </HierarchicalDataTemplate>
        </TabItem.Resources>
        <DockPanel LastChildFill="True">
          <Grid DockPanel.Dock="Top">
            <TextBlock Text="Complex ItemsPanel inside TreeViewItem" Style="{StaticResource SampleHeaderTextBlockStyle}" />
            <Button CommandParameter="88" ToolTip="Open #88 on Github" Style="{StaticResource GitHubIssueButtonStyle}" />
          </Grid>
          <ScrollViewer HorizontalScrollBarVisibility="Disabled"
                        VerticalScrollBarVisibility="Auto">
            <StackPanel>
              <TextBlock Style="{StaticResource DefaultTextBlockStyle}"
                         Text="TreeView with a TreeViewItem which binds the ItemSource to a Collection." />
              <TreeView ItemsSource="{Binding Data.TreeCollection1}"
                        ItemContainerStyle="{StaticResource CustomTreeViewItemStyle}"
                        ItemTemplate="{StaticResource CustomTreeViewItemTemplate}"
                        HorizontalContentAlignment="Stretch"
                        ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                        dd:DragDrop.IsDragSource="True"
                        dd:DragDrop.IsDropTarget="True"
                        dd:DragDrop.UseDefaultDragAdorner="True" />
            </StackPanel>
          </ScrollViewer>
        </DockPanel>
      </TabItem>

      <TabItem Header="#188">
        <DockPanel LastChildFill="True">
          <Grid DockPanel.Dock="Top">
            <TextBlock Text="Wrong item gets dragged on drag start" Style="{StaticResource SampleHeaderTextBlockStyle}" />
            <Button CommandParameter="188" ToolTip="Open #188 on Github" Style="{StaticResource GitHubIssueButtonStyle}" />
          </Grid>
          <ScrollViewer HorizontalScrollBarVisibility="Disabled"
                        VerticalScrollBarVisibility="Auto">
            <StackPanel>
              <TextBlock Style="{StaticResource DefaultTextBlockStyle}"
                         Text="Wrong (next) item gets dragged when starting dragging in lower half of item." />
              <ItemsControl Height="NaN"
                            dd:DragDrop.IsDragSource="True"
                            dd:DragDrop.IsDropTarget="True"
                            dd:DragDrop.UseDefaultDragAdorner="True"
                            dd:DragDrop.DefaultDragAdornerOpacity="0.6">
                <ItemsControl.ItemTemplate>
                  <DataTemplate DataType="{x:Type models:ItemModel}">
                    <GroupBox Margin="0,5,0,5" Background="Transparent">
                      <GroupBox.Header>
                        <TextBlock>
                          <Run Text="Item " />
                          <Run Text="{Binding Caption, Mode=OneWay}" />
                        </TextBlock>
                      </GroupBox.Header>
                      <Grid Margin="10">
                        <Grid.RowDefinitions>
                          <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                          <ColumnDefinition Width="*" />
                          <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>

                        <ComboBox Grid.Column="0" VerticalAlignment="Center" Height="25" MinWidth="70" Margin="10,0,0,0"
                                  ItemsSource="{Binding SubItemCollection, Mode=OneWay}"
                                  SelectedValue="{Binding Path=SelectedSubItem, TargetNullValue={x:Null}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <Button Grid.Column="1" Margin="30,0,0,0" Content="..." Width="70" HorizontalAlignment="Right" VerticalAlignment="Center" />
                      </Grid>
                    </GroupBox>
                  </DataTemplate>
                </ItemsControl.ItemTemplate>

                <models:ItemModel Caption="1" />
                <models:ItemModel Caption="2" />
                <models:ItemModel Caption="3" />
                <models:ItemModel Caption="4" />

              </ItemsControl>
            </StackPanel>
          </ScrollViewer>
        </DockPanel>
      </TabItem>

      <TabItem Header="#146">
        <DockPanel LastChildFill="True">
          <Grid DockPanel.Dock="Top">
            <TextBlock Text="Library throws 'The specified Visual is not an ancestor of this Visual'" Style="{StaticResource SampleHeaderTextBlockStyle}" />
            <Button CommandParameter="146" ToolTip="Open #146 on Github" Style="{StaticResource GitHubIssueButtonStyle}" />
          </Grid>
          <ScrollViewer HorizontalScrollBarVisibility="Disabled"
                        VerticalScrollBarVisibility="Auto">
            <StackPanel>
              <TextBlock Style="{StaticResource DefaultTextBlockStyle}"
                         Text="This is a more complex sample with nested controls." />
              <Grid>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="*" />
                  <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <ListView Grid.Column="0"
                          Margin="4"
                          Height="450"
                          ItemsSource="{Binding Data.TreeCollection1}"
                          dd:DragDrop.IsDragSource="True"
                          dd:DragDrop.IsDropTarget="True"
                          dd:DragDrop.DragDropContext="OuterContext">
                  <ListView.ItemTemplate>
                    <DataTemplate>
                      <Grid>
                        <Grid.RowDefinitions>
                          <RowDefinition />
                          <RowDefinition />
                        </Grid.RowDefinitions>
                        <Label Grid.Row="0" Content="{Binding Caption}" />
                        <!-- This nested ListView contains some items and problem occurs when I start dragging parent item from position in nested ListView OR dragging other item ovet this item -->
                        <ListView Grid.Row="1"
                                  Height="NaN"
                                  MinHeight="25"
                                  MinWidth="100"
                                  AllowDrop="False"
                                  ItemsSource="{Binding Children}"
                                  ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                                  ScrollViewer.VerticalScrollBarVisibility="Disabled" />
                      </Grid>
                    </DataTemplate>
                  </ListView.ItemTemplate>
                </ListView>
                <ListView Grid.Column="1"
                          Margin="4"
                          Height="450"
                          ItemsSource="{Binding Data.TreeCollection2}"
                          dd:DragDrop.IsDragSource="True"
                          dd:DragDrop.IsDropTarget="True"
                          dd:DragDrop.DragDropContext="OuterContext">
                  <ListView.ItemTemplate>
                    <DataTemplate>
                      <Grid AllowDrop="True">
                        <Grid.RowDefinitions>
                          <RowDefinition />
                          <RowDefinition />
                        </Grid.RowDefinitions>
                        <Label Grid.Row="0" Content="{Binding Caption}" />
                        <ListView Grid.Row="1"
                                  Height="NaN"
                                  MinHeight="25"
                                  MinWidth="100"
                                  dd:DragDrop.IsDragSource="True"
                                  dd:DragDrop.IsDropTarget="True"
                                  dd:DragDrop.DragDropContext="InnerContext"
                                  ItemsSource="{Binding Children}"
                                  ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                                  ScrollViewer.VerticalScrollBarVisibility="Disabled" />
                      </Grid>
                    </DataTemplate>
                  </ListView.ItemTemplate>
                </ListView>
              </Grid>

            </StackPanel>
          </ScrollViewer>
        </DockPanel>
      </TabItem>

    </TabControl>

  </Grid>
</UserControl>