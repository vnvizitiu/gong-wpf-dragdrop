<UserControl x:Class="Showcase.WPF.DragDrop.Views.TreeViewSamples"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:Showcase.WPF.DragDrop.Views"
             xmlns:viewModels="clr-namespace:Showcase.WPF.DragDrop.ViewModels"
             xmlns:dd="urn:gong-wpf-dragdrop"
             mc:Ignorable="d"
             d:DataContext="{d:DesignInstance viewModels:MainViewModel}"
             d:DesignHeight="400" d:DesignWidth="600">

  <Grid>
    <Grid.Resources>
      <Style TargetType="{x:Type TreeView}" BasedOn="{StaticResource DefaultTreeViewStyle}" />
    </Grid.Resources>

    <TabControl Style="{StaticResource ShowcaseTabControlStyle}">
      <TabItem Header="Bound">
        <TabItem.Resources>
          <Style x:Key="BoundTreeViewItemStyle" TargetType="{x:Type TreeViewItem}">
            <Setter Property="Padding" Value="2" />
            <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
          </Style>
        </TabItem.Resources>
        <DockPanel LastChildFill="True">
          <TextBlock Text="TreeView Unbound" Style="{StaticResource SampleHeaderTextBlockStyle}" DockPanel.Dock="Top" />
          <ScrollViewer HorizontalScrollBarVisibility="Disabled"
                        VerticalScrollBarVisibility="Auto">
            <StackPanel>
              <TextBlock Style="{StaticResource DefaultTextBlockStyle}"
                         Text="Demonstrates the default behaviour with two TreeViews bound to two collections of the same type. Just try drag and drop some Items from left TreeView to right TreeView." />
              <Grid>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="*" />
                  <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <TreeView Grid.Column="0"
                          x:Name="LeftBoundTreeView"
                          ItemContainerStyle="{StaticResource BoundTreeViewItemStyle}"
                          ItemsSource="{Binding Data.TreeCollection1}"
                          dd:DragDrop.IsDragSource="True"
                          dd:DragDrop.IsDropTarget="True"
                          dd:DragDrop.UseDefaultDragAdorner="True"
                          dd:DragDrop.UseDefaultEffectDataTemplate="True">
                  <TreeView.ItemTemplate>
                    <HierarchicalDataTemplate ItemsSource="{Binding Children}">
                      <TextBlock Text="{Binding Caption}" Margin="2" />
                    </HierarchicalDataTemplate>
                  </TreeView.ItemTemplate>
                </TreeView>
                <TreeView Grid.Column="1"
                          ItemContainerStyle="{StaticResource BoundTreeViewItemStyle}"
                          ItemsSource="{Binding Data.TreeCollection2}"
                          dd:DragDrop.IsDragSource="True"
                          dd:DragDrop.IsDropTarget="True"
                          dd:DragDrop.UseDefaultDragAdorner="True">
                  <TreeView.ItemTemplate>
                    <HierarchicalDataTemplate ItemsSource="{Binding Children}">
                      <TextBlock Text="{Binding Caption}" Margin="2" />
                    </HierarchicalDataTemplate>
                  </TreeView.ItemTemplate>
                </TreeView>
              </Grid>

              <TextBlock Style="{StaticResource DefaultTextBlockStyle}"
                         Text="Customization (for left TreeView)" />
              <CheckBox Margin="10 5" Content="IsDragSource"
                        IsChecked="{Binding ElementName=LeftBoundTreeView, Path=(dd:DragDrop.IsDragSource), Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
              <CheckBox Margin="10 5" Content="IsDropTarget"
                        IsChecked="{Binding ElementName=LeftBoundTreeView, Path=(dd:DragDrop.IsDropTarget), Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
              <CheckBox Margin="10 5" Content="UseDefaultDragAdorner"
                        IsChecked="{Binding ElementName=LeftBoundTreeView, Path=(dd:DragDrop.UseDefaultDragAdorner), Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
              <CheckBox Margin="10 5" Content="UseDefaultEffectDataTemplate"
                        IsChecked="{Binding ElementName=LeftBoundTreeView, Path=(dd:DragDrop.UseDefaultEffectDataTemplate), Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
            </StackPanel>
          </ScrollViewer>
        </DockPanel>
      </TabItem>

      <TabItem Header="Unbound">
        <DockPanel LastChildFill="True">
          <TextBlock Text="TreeView Unbound" Style="{StaticResource SampleHeaderTextBlockStyle}" DockPanel.Dock="Top" />
          <ScrollViewer HorizontalScrollBarVisibility="Disabled"
                        VerticalScrollBarVisibility="Auto">
            <StackPanel>
              <TextBlock Style="{StaticResource DefaultTextBlockStyle}"
                         Text="Demonstrates the default behaviour with two TreeViews and unbound items (e.g. direct usage of TreeViewItem). Just try drag and drop some Items from left TreeView to right TreeView." />
              <Grid>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="*" />
                  <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <TreeView Grid.Column="0"
                          x:Name="LeftUnboundTreeView"
                          dd:DragDrop.IsDragSource="True"
                          dd:DragDrop.IsDropTarget="True"
                          dd:DragDrop.UseDefaultDragAdorner="True"
                          dd:DragDrop.UseDefaultEffectDataTemplate="True">
                  <TreeViewItem Header="Root 1"
                                IsExpanded="True">
                    <TreeViewItem Header="Item 10" />
                    <TreeViewItem Header="Item 20" />
                    <TreeViewItem Header="Item 30" />
                    <TreeViewItem Header="Item 40" />
                    <TreeViewItem Header="Item 50" />
                  </TreeViewItem>
                  <TreeViewItem Header="Root 2"
                                IsExpanded="True">
                    <TreeViewItem Header="Item 20" />
                    <TreeViewItem Header="Item 21" />
                    <TreeViewItem Header="Item 22" />
                  </TreeViewItem>
                  <TreeViewItem Header="Root 3" />
                </TreeView>
                <TreeView Grid.Column="1"
                          dd:DragDrop.IsDragSource="True"
                          dd:DragDrop.IsDropTarget="True"
                          dd:DragDrop.UseDefaultDragAdorner="True" />
              </Grid>

              <TextBlock Style="{StaticResource DefaultTextBlockStyle}"
                         Text="Customization (for left TreeView)" />
              <CheckBox Margin="10 5" Content="IsDragSource"
                        IsChecked="{Binding ElementName=LeftUnboundTreeView, Path=(dd:DragDrop.IsDragSource), Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
              <CheckBox Margin="10 5" Content="IsDropTarget"
                        IsChecked="{Binding ElementName=LeftUnboundTreeView, Path=(dd:DragDrop.IsDropTarget), Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
              <CheckBox Margin="10 5" Content="UseDefaultDragAdorner"
                        IsChecked="{Binding ElementName=LeftUnboundTreeView, Path=(dd:DragDrop.UseDefaultDragAdorner), Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
              <CheckBox Margin="10 5" Content="UseDefaultEffectDataTemplate"
                        IsChecked="{Binding ElementName=LeftUnboundTreeView, Path=(dd:DragDrop.UseDefaultEffectDataTemplate), Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
            </StackPanel>
          </ScrollViewer>
        </DockPanel>
      </TabItem>
    </TabControl>

  </Grid>

</UserControl>